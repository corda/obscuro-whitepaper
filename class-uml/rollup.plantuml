@startuml
!pragma teoz true
skinparam monochrome false
skinparam roundcorner 15
skinparam shadowing false
skinparam object{
  BackgroundColor White
  BorderColor Black
}

!define C(x) <color:grey>// x</color>
!define NL |||

object TENRollup {
    C(Hash of the parent rollup)
    - parentHash: Hash

    NL
    C(The number of ancestor blocks)
    - generation: Int

    NL
    C(The timestamp as set by the Aggregator)
    C(The contract checks that it is reasonable compared to the L1 block and the parent)
    - timestamp: Timestamp

    NL
    C(Used to make sure that deposits are in sync with the L1 transfers)
    C(This value is produced by the enclave from the incoming deposit transactions)
    C(Enforced by the MC when the block is submitted to L1)
    C(The dependency has to be an ancestor of the current L1 block that is being mined)
    - l1BlockDependency: L1BlockHash

    NL
    C(Number of transactions included in this block)
    - numTransactions: Int

    NL
    C(The root hash of the transactions included in this block organised as a MTree)
    - transactionsRoot: Hash

    NL
    C(The list of encrypted L2 transactions)
    C(This is stored as "calldata")
    - transactionsRoot: List<EncryptedTransaction>

    NL
    C(The root hash of the receipts of each transaction)
    - receiptsRoot: Hash

    NL
    C(Root hash of a state Patricia MTree constructed by the Aggregator)
    C(Same datastructure as Ethereum)
    - stateRoot: Hash

    NL
    TODO(Do we need this?)
    - logsBloom: BloomFilter

    NL
    C(The pub key of the Aggregator who submitted)
    C(Must be part of the stakers. And must be the signer)
    - aggregator: AggregatorIdentity

    NL
    C(Some of the transactions in the rollup are withdrawal requests from users)
    C(The enclave adds these to this list in an unencrypted form to be used by the L1 Management Contract)
    TODO(this is a sidechannel. )
    C(We could use something like the submarine technique and disclose withdrawals with a delay)
    - withdrawals: List<Withdrawal>

    NL
    C(Random stuff relating to this rollup)
    - extraData: ByteArray

    NL
    C(The hash of the L1 block where the parent was published)
    C(This is required because the POBI protocol dictates that a rollup can only be generated after the parent rollup was published in an L1 block)
    - L1ParentBlock: Hash

    NL
    C(This is a nonce generated by the TEE)
    C(Used as a trusted lottery system to determine a fair sequencing)
    - nonce: Long
}

object SignedTENRollup {
    - rollup: TENRollup
    - hashOfRollup: Hash
    - signatureOfTEE: Signature
}

object Withdrawal{
    C(It is part of a rollup in plaintext. )
    C(Processed by the L1 Management Contract)
    C(according to the complex withdraw logic)
    NL

    - recipient: Address
    - amount: Amount [value, asset]
}
@enduml